loggedIn&&"admin"===userRole||(window.location="/index.html");const setErrorMessage=({btnArea:e,btnName:t,btnId:a,msgArea:n,msg:s})=>{document.getElementById("loader")&&document.getElementById("loader").remove(),document.getElementById(e).insertAdjacentHTML("beforeend",`<button id=${a} type="submit">${t}</button>`),document.getElementById(n).innerHTML="",document.getElementById(n).insertAdjacentHTML("afterbegin",`<div class="alert alert-danger">\n            <a href="javascript:void(0);" class="close" data-dismiss="alert" aria-label="close">&times;</a>\n            <strong>Error:</strong> ${s}\n          </div>`)},fetchData=async e=>{const t=await fetch(`${baseURL}/${e}`,{method:"GET",headers:{"Content-Type":"application/json"}});return await t.json()},displayData=async e=>{const t=await fetchData(e);document.getElementById("users-table").innerHTML="<tr>\n        <th>No</th>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Tutor</th>\n        <th>Students</th>\n        <th>Role</th>\n    </tr>";for(let e=0;e<t.data.length;e++)document.getElementById("users-table").insertAdjacentHTML("beforeend",`<tr>\n            <td>${e+1}</td>\n            <td>${t.data[e].name}</td>\n            <td>${t.data[e].email}</td>\n            <td>${"student"===t.data[e].role?null===t.data[e].tutor?"No Tutor Yet":t.data[e].tutor:"N/A"}</td>\n            <td>\n                ${"tutor"===t.data[e].role?0===t.data[e].students.length?"No Student Yet":t.data[e].students.map(e=>` ${e.name}`):"N/A"}\n            </td>\n            <td>${t.data[e].role}</td>\n            <td><button id=${t.data[e].active?`deactivate-${t.data[e]._id}`:`activate-${t.data[e]._id}`} class="isActiveBtn btn btn-primary">${t.data[e].active?"Deactivate":"Activate"}</button></td>\n            <td><button class="btn btn-info">View User Card</button></td>\n        </tr>\n        `);activateOrDeactivateUser()},activateOrDeactivateUser=()=>{const e=document.getElementsByClassName("isActiveBtn");Array.prototype.filter.call(e,e=>{e.addEventListener("click",async e=>{const t=e.target.id,a=t.split("-")[0],n=t.split("-")[1];if("activate"===a){const e=await fetch(`${baseURL}/activate/user/${n}`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${token}`}}),a=await e.json();201!==e.status?console.error(a.message):(document.getElementById(t).innerText="Deactivate",document.getElementById(t).setAttribute("id",`deactivate-${n}`))}else if("deactivate"===a){const e=await fetch(`${baseURL}/deactivate/user/${n}`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${token}`}}),a=await e.json();201!==e.status?console.error(a.message):(document.getElementById(t).innerText="Activate",document.getElementById(t).setAttribute("id",`activate-${n}`))}})})};window.addEventListener("load",async()=>{firebase.initializeApp(firebaseConfig);try{const e=await fetch(`${baseURL}/get_user_info?userId=${userId}`,{method:"GET",headers:{"Content-Type":"application/json"}}),t=await e.json();document.getElementById("user-name").insertAdjacentHTML("beforeend",`${t.data.user.name} <i class="fa fa-caret-down"></i>`),document.getElementById("logout-btn").addEventListener("click",logout);const a=await fetch(`${baseURL}/get_all_students`,{method:"GET",headers:{"Content-Type":"application/json"}}),n=await a.json();document.getElementById("student-num").innerText=n.data.length;const s=await fetch(`${baseURL}/get_tutors`,{method:"GET",headers:{"Content-Type":"application/json"}}),d=await s.json();document.getElementById("tutor-num").innerText=d.data.length,chart.data=[{type:"Student",count:n.data.length},{type:"Tutor",count:d.data.length},{type:"Issue",count:23}],await displayData("get_all_users"),document.getElementById("display-users").addEventListener("change",async e=>{switch(e.target.value){case"all-students":await displayData("get_all_students");break;case"all-admins":await displayData("get_all_admins");break;case"all-tutors":await displayData("get_tutors");break;case"all-alloc-studs":await displayData("get_all_allocated_students");break;case"all-unalloc-studs":await displayData("get_all_unallocated_students");break;case"all-alloc-tutors":await displayData("get_all_allocated_tutors");break;case"all-unalloc-tutors":await displayData("get_all_unallocated_tutors");break;case"all-active-users":await displayData("get_all_active_users");break;case"all-inactive-users":await displayData("get_all_inactive_users");break;default:await displayData("get_all_users")}});const r=document.getElementsByClassName("needs-validation");Array.prototype.filter.call(r,e=>{e.addEventListener("submit",async t=>{if(t.preventDefault(),t.stopPropagation(),e.checkValidity()){document.getElementById("add-user-btn").remove(),document.getElementById("add-user-form").insertAdjacentHTML("beforeend",'<div id="loader" class="loader" style="margin-top: 3rem;">');const e=document.getElementById("name").value,t=document.getElementById("email").value,a=document.getElementById("role").value,n=document.getElementById("file").files[0];generateBase64FromImage(n).then(s=>{const d=firebase.storage().ref().child(`${(new Date).getTime().toString()}-${n.name}`),r=d.putString(s,"data_url");r.on("state_changed",()=>{},e=>{console.error(e),document.getElementById("loader").remove(),setErrorMessage({btnArea:"add-user-form",btnName:"Add New User",msgArea:"form-msg",msg:"Image Uploading Failed!",btnId:"add-user-btn"})},()=>{r.snapshot.ref.getDownloadURL().then(async n=>{try{const s=new FormData;s.append("name",e),s.append("email",t),s.append("role",a),s.append("password","password"),s.append("image",n);const r=await fetch(`${baseURL}/create_user`,{method:"POST",headers:{Authorization:`Bearer ${token}`},body:s}),l=await r.json();201!==r.status?(d.delete().then(()=>{console.log("File Deleted Successfully")}).catch(e=>{console.error(e)}),setErrorMessage({btnArea:"add-user-form",btnName:"Add New User",msgArea:"form-msg",msg:l.message,btnId:"add-user-btn"})):(document.getElementById("form-msg").innerHTML="",document.getElementById("form-msg").insertAdjacentHTML("afterbegin",'<div class="alert alert-success">\n                        <a href="javascript:void(0);" class="close" data-dismiss="alert" aria-label="close">&times;</a>\n                        <strong>Success:</strong> User Created Successfully. <a href="#users" style="color: #337ab7;">View Users?</a>\n                      </div>'),document.getElementById("loader").remove(),document.getElementById("add-user-form").insertAdjacentHTML("beforeend",'<button id="add-user-btn" type="submit">Add New User</button>'),document.getElementById("name").value="",document.getElementById("email").value="",document.getElementById("role").value="",document.getElementById("file").value="")}catch(e){console.error(e),setErrorMessage({btnArea:"add-user-form",btnName:"Add New User",msgArea:"form-msg",msg:"Something went wrong",btnId:"add-user-btn"})}})})})}else e.classList.add("was-validated")})});for(let e=0;e<d.data.length;e++)document.getElementById("tutor-modal").insertAdjacentHTML("beforeend",`<div class="profile-tutor full">\n                <div class="t-name">${d.data[e].name}</div>\n                <div class="t-image">\n                  <img src=${d.data[e].image} alt="">\n                </div>\n                <div class="t-select">\n                  <input type="radio" name="tutor" value=${d.data[e]._id}>\n                </div>\n            </div>`);for(let e=0;e<n.data.length;e++)document.getElementById("student-modal").insertAdjacentHTML("beforeend",`<div class="profile-student full">\n                <div class="s-name">${n.data[e].name}</div>\n                <div class="s-image">\n                  <img src=${n.data[e].image} alt="">\n                </div>\n                <div class="s-check">\n                  <input type="checkbox" name="student" value=${n.data[e]._id}>\n                </div>\n            </div>`);let l,o=[];Array.prototype.filter.call(document.querySelectorAll('[name="tutor"]'),e=>{e.addEventListener("change",e=>{l=e.target.value})}),Array.prototype.filter.call(document.querySelectorAll('[name="student"]'),e=>{e.addEventListener("change",e=>{e.target.checked?o.length<10?o.push(e.target.value):window.alert("You can only assign 10 students to one tutor"):o=o.filter(t=>t!==e.target.value)})})}catch(e){console.error(e)}});
